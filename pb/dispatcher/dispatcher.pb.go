// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: dispatcher.proto

package dispatcher

import (
	common "github.com/BBitQNull/SSHoneyNet/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DispatcherRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ast           *common.Script         `protobuf:"bytes,1,opt,name=ast,proto3" json:"ast,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatcherRequest) Reset() {
	*x = DispatcherRequest{}
	mi := &file_dispatcher_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatcherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatcherRequest) ProtoMessage() {}

func (x *DispatcherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatcherRequest.ProtoReflect.Descriptor instead.
func (*DispatcherRequest) Descriptor() ([]byte, []int) {
	return file_dispatcher_proto_rawDescGZIP(), []int{0}
}

func (x *DispatcherRequest) GetAst() *common.Script {
	if x != nil {
		return x.Ast
	}
	return nil
}

type DispatcherResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmdresult     string                 `protobuf:"bytes,1,opt,name=cmdresult,proto3" json:"cmdresult,omitempty"`
	Errcode       int32                  `protobuf:"varint,2,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg        string                 `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatcherResponse) Reset() {
	*x = DispatcherResponse{}
	mi := &file_dispatcher_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatcherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatcherResponse) ProtoMessage() {}

func (x *DispatcherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatcherResponse.ProtoReflect.Descriptor instead.
func (*DispatcherResponse) Descriptor() ([]byte, []int) {
	return file_dispatcher_proto_rawDescGZIP(), []int{1}
}

func (x *DispatcherResponse) GetCmdresult() string {
	if x != nil {
		return x.Cmdresult
	}
	return ""
}

func (x *DispatcherResponse) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *DispatcherResponse) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

var File_dispatcher_proto protoreflect.FileDescriptor

const file_dispatcher_proto_rawDesc = "" +
	"\n" +
	"\x10dispatcher.proto\x12\x02pb\x1a\fcommon.proto\"1\n" +
	"\x11DispatcherRequest\x12\x1c\n" +
	"\x03ast\x18\x01 \x01(\v2\n" +
	".pb.ScriptR\x03ast\"d\n" +
	"\x12DispatcherResponse\x12\x1c\n" +
	"\tcmdresult\x18\x01 \x01(\tR\tcmdresult\x12\x18\n" +
	"\aerrcode\x18\x02 \x01(\x05R\aerrcode\x12\x16\n" +
	"\x06errmsg\x18\x03 \x01(\tR\x06errmsg2H\n" +
	"\aCmdEcho\x12=\n" +
	"\n" +
	"Dispatcher\x12\x15.pb.DispatcherRequest\x1a\x16.pb.DispatcherResponse\"\x00B/Z-github.com/BBitQNull/SSHoneyNet/pb/dispatcherb\x06proto3"

var (
	file_dispatcher_proto_rawDescOnce sync.Once
	file_dispatcher_proto_rawDescData []byte
)

func file_dispatcher_proto_rawDescGZIP() []byte {
	file_dispatcher_proto_rawDescOnce.Do(func() {
		file_dispatcher_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dispatcher_proto_rawDesc), len(file_dispatcher_proto_rawDesc)))
	})
	return file_dispatcher_proto_rawDescData
}

var file_dispatcher_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dispatcher_proto_goTypes = []any{
	(*DispatcherRequest)(nil),  // 0: pb.DispatcherRequest
	(*DispatcherResponse)(nil), // 1: pb.DispatcherResponse
	(*common.Script)(nil),      // 2: pb.Script
}
var file_dispatcher_proto_depIdxs = []int32{
	2, // 0: pb.DispatcherRequest.ast:type_name -> pb.Script
	0, // 1: pb.CmdEcho.Dispatcher:input_type -> pb.DispatcherRequest
	1, // 2: pb.CmdEcho.Dispatcher:output_type -> pb.DispatcherResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dispatcher_proto_init() }
func file_dispatcher_proto_init() {
	if File_dispatcher_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dispatcher_proto_rawDesc), len(file_dispatcher_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dispatcher_proto_goTypes,
		DependencyIndexes: file_dispatcher_proto_depIdxs,
		MessageInfos:      file_dispatcher_proto_msgTypes,
	}.Build()
	File_dispatcher_proto = out.File
	file_dispatcher_proto_goTypes = nil
	file_dispatcher_proto_depIdxs = nil
}
